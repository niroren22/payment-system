<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>risk-engine</artifactId>
	<name>risk-engine</name>
	<description>Risk Engine Service</description>

	<parent>
		<groupId>com.niroren</groupId>
		<artifactId>payment-system</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<liquibase.version>3.8.5</liquibase.version>
		<buildDbPath>${project.build.directory}/liquibase/db;shutdown=true</buildDbPath>
		<buildJdbcUrl>jdbc:hsqldb:${buildDbPath}</buildJdbcUrl>
		<buildDbUser>a</buildDbUser>
		<hsqldbVersion>2.4.0</hsqldbVersion>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.niroren</groupId>
			<artifactId>common</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- Queueing service dependencies -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
		</dependency>

		<!-- JOOQ dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>

		<!-- database dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldbVersion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>

		<!-- Testing dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<paymentTopic>payments</paymentTopic>
						<paymentValidationTopic>validated-payments</paymentValidationTopic>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- Read properties from file -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.basedir}/src/main/resources/application.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.version}</version>
				<configuration>
					<changeLogFile>${liquibase.build.change-log}</changeLogFile>
					<driver>org.hsqldb.jdbc.JDBCDriver</driver>
					<url>${buildJdbcUrl}</url>
					<username>${buildDbUser}</username>
					<password/>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					<defaultSchemaName>${jooq.build.schema-name}</defaultSchemaName>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Add generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/jooq</source>
								<source>target/generated-sources/jooq/com/niroren/riskengine/model</source>
								<source>target/generated-sources/jooq/com/niroren/riskengine/model/tables</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate JOOQ classes -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldbVersion}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generator>
								<generate>
									<pojos>true</pojos>
								</generate>
								<database>
									<name>org.jooq.meta.hsqldb.HSQLDBDatabase</name>
									<includes>.*</includes>
									<excludes>DATABASECHANGELOG.*</excludes>
									<schemata>
										<schema>
											<inputSchema>${jooq.build.schema-name}</inputSchema>
											<outputSchema>${jooq.production.schema-name}</outputSchema>
										</schema>
									</schemata>
									<!--<inputSchema>${liquibase.schema-name}</inputSchema>-->

									<forcedTypes>
										<forcedType>
											<userType>com.niroren.paymentservice.dto.ValidationResult</userType>
											<converter>com.niroren.riskengine.persistency.converters.TypeConverters.ValidationResultConverter</converter>
											<expression>.*.validation_result</expression>
										</forcedType>
									</forcedTypes>

								</database>
								<target>
									<clean>true</clean>
									<packageName>com.niroren.riskengine.model</packageName>
									<directory>target/generated-sources/jooq</directory>
								</target>
							</generator>
							<jdbc>
								<driver>org.hsqldb.jdbc.JDBCDriver</driver>
								<url>${buildJdbcUrl}</url>
								<user>${buildDbUser}</user>
								<password/>
							</jdbc>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>10</source>
					<target>10</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
